{"version":3,"sources":["components/Login.js","components/ChatMessage.js","components/Channel.js","components/Header.js","components/SendMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","signIn","className","onClick","src","ChatMessage","key","message","auth","text","photoURL","messageClass","uid","currentUser","console","log","Channel","messagesRef","query","orderBy","limit","useCollectionData","idField","messages","lastMessage","useRef","map","msg","id","ref","Header","signOut","SendMessage","firestore","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","createdAt","firebase","FieldValue","serverTimestamp","class","onSubmit","value","onChange","target","placeholder","type","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useAuthState","user","collection","provider","GoogleAuthProvider","signInWithPopup","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.392fbd53.chunk.js","sourcesContent":["import '../css/login.css';\r\n\r\nconst Login = ({ signIn }) => {\r\n  return (\r\n    <div className=\"signInContainer\">\r\n      <h1>Login to start chatting</h1>\r\n      <button className=\"signInBtn\" onClick={signIn}>\r\n        <img src=\"google.png\" /> <p>sign in with google</p>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"../css/chatMessage.css\";\r\n\r\nconst ChatMessage = ({ key, message, auth }) => {\r\n  const { text, photoURL, uid } = message;\r\n  const messageClass = uid == auth.currentUser.uid ? \"sent\" : \"received\";\r\n  console.log(messageClass);\r\n  console.log(photoURL);\r\n  return (\r\n    <div className={\"chatMessage \" + messageClass}>\r\n      <img src={photoURL?photoURL:\"user.png\"} />\r\n      <div className=\"messageTextContainer\">\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport \"../css/channel.css\";\r\n\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst Channel = ({ messagesRef, auth }) => {\r\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n  const lastMessage = useRef();\r\n  return (\r\n    <div className=\"channel\">\r\n      {messages &&\r\n        messages.map((msg) => (\r\n          <ChatMessage key={msg.id} message={msg} auth={auth} />\r\n        ))}\r\n      <div ref={lastMessage}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n","import React from 'react'\r\nimport '../css/header.css';\r\n\r\nconst Header = ({signOut}) => {\r\n    return (\r\n        <header>\r\n        <div className=\"backChat\">\r\n          <span className=\"material-icons\">keyboard_arrow_left</span>\r\n          <h1>Global</h1>\r\n        </div>\r\n        <button className=\"signOutBtn\" onClick={signOut}>\r\n          <p>logout</p>\r\n        </button>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import \"../css/sendMessage.css\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst SendMessage = ({ auth, messagesRef, firestore }) => {\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const sendMessage = async (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL,\r\n    });\r\n\r\n    setFormValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div class=\"textArea\">      \r\n      <form onSubmit={sendMessage}>\r\n        <textarea\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          placeholder=\"write some words\"\r\n        />\r\n        <button type=\"submit\">\r\n          <span className=\"material-icons\">gavel</span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import \"./css/app.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nimport Login from \"./components/Login\";\nimport Channel from \"./components/Channel\";\nimport Header from \"./components/Header\";\nimport SendMessage from \"./components/SendMessage\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyACpTYTkS62_1c4zTgaHDOhy-oXjMYHzQY\",\n  authDomain: \"react-chat-app-f91d6.firebaseapp.com\",\n  projectId: \"react-chat-app-f91d6\",\n  storageBucket: \"react-chat-app-f91d6.appspot.com\",\n  messagingSenderId: \"80861148167\",\n  appId: \"1:80861148167:web:7cffc4e349f0e0d37e66a2\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  const signIn = () => {\n    try {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const signOut = () => {\n    auth.signOut();\n  };\n\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  return (\n    <div className=\"appContainer\">\n      {user ? (\n        <div>\n          <Header signOut={signOut} />\n          <Channel messagesRef={messagesRef} auth={auth}/>\n          <SendMessage messagesRef={messagesRef} firestore={firestore} auth={auth}/>\n        </div>\n      ) : (\n        <Login signIn={signIn} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}